@page "/candidateinfo"
@inject IJSRuntime jsr
@using XebecPortal.Client.JobPortalTestEnv.Models

<style>
    @@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@100;200;300;400;500;600;700;800&display=swap');

    * {
        font-family: 'Montserrat', sans-serif;
    }

    .wrapper-job {
        width: 100%;
        height: 100vh;
        display: flex;
        flex-direction: column;
        justify-content: space-around;
        align-items: center;
        background-color: #F0FFFF;
    }

    .add-job-container {
        padding: 20px;
        width: 90%;
        max-width: 650px;
        margin: auto;
        height: 90%;
        max-height: 500px;
        display: flex;
        justify-content: space-evenly;
        align-items: center;
        flex-direction: column;
        box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;
        background-color: #fff;
        border-radius: 5px;
    }

    .inner-wrapper {
        width: 100%;
        height: 90%;
        margin: auto;
        display: flex;
    }

    .left {
        width: 45%;
        height: inherit;
        padding: 5px;
        overflow-y: scroll;
    }

    .left::-webkit-scrollbar {
        width: 12px;
    }

    .left::-webkit-scrollbar-track {
        background-color: #EAF2F8;
    }

    .left::-webkit-scrollbar-thumb {
        background-color: #95A5A6;
        border-radius: 20px;
        border: 3px solid #EAF2F8;
    }

    .box {
        width: 90%;
        height: fit-content;
        padding: 10px;
        margin: 5px auto;
        cursor: pointer;
    }

    .right {
        width: 55%;
        height: inherit;
        display: flex;
        flex-direction: column;
        justify-content: space-evenly;
    }

    .select-details {
        width: 90%;
        height: 70%;
        margin: auto;
        padding: 10px;
    }

    .box,
    .select-details {
        border: 1px solid #95A5A6;
        border-radius: 5px;
        font-size: 13px;
        padding: 5px;
    }

    .btn-container {
        width: 90%;
        height: 25%;
        margin: auto;
        display: flex;
        justify-content: flex-end;
        align-items: center;
    }
</style>


<div class="wrapper-job">

    <h1 class="mt-5" style="margin-bottom: -5px;">Candidates</h1>

    <div class="add-job-container">

        <input type="text" class="form-control w-75 mt-2 mb-3" placeholder="search">

        <div class="inner-wrapper">

            <div class="left">

                @if(Candidates != null)
                {
                    @foreach (var candidate in Candidates)
                    {
                        <div class="box" @onclick="On" id=@($"{(candidate.Id)}")>
                   
                            <ul>

                                <li id="child">@candidate.Id</li>   
                                <li>@candidate.Name</li> 
                                <li>@candidate.YearsOfExp</li>  

                            </ul>

                        </div>

                    }
                }                    
               

            </div>

            <div class="right">
                <div class="select-details">
                    
                    @if(IsClicked && CurrentCandidate != null)
                    {
                    
                  
                     <p>@CurrentCandidate.Id</p>
                        <p>@CurrentCandidate.Name</p>
                        <p>@CurrentCandidate.YearsOfExp</p>
                        <p>@CurrentCandidate.ExtraInfo</p>
                    }


                </div>
                <div class="btn-container">
                    <button class="btn btn-outline-info btn-sm">Add</button>

                </div>
            </div>

        </div>



    </div>

</div>


@code
{

    private List<CandidateTest> Candidates = new List<CandidateTest>
    {


        new CandidateTest
        {
            Id = 1,
            Name = "Johnathan Snow",
            YearsOfExp = 2,
            ExtraInfo = "Lorem ipsum dolor sit amet consectetur adipisicing elit. Iure laborum nesciunt unde iusto quas rerumores quaerat eum velit totam!"

        },

        new CandidateTest
        {
            Id = 2,
            Name = "Edward Stark",
            YearsOfExp = 8,
            ExtraInfo = "Lorem ipsum dolor sit amet consectetur adipisicing elit. Iure laborum nesciunt unde iusto quas rerumores quaerat eum velit totam!"

        },

        new CandidateTest
        {
            Id = 3,
            Name = "Peter Parker",
            YearsOfExp = 1,
            ExtraInfo = "Lorem ipsum dolor sit amet consectetur adipisicing elit. Iure laborum nesciunt unde iusto quas rerumores quaerat eum velit totam!"

        },

        new CandidateTest
        {
            Id = 4,
            Name = "Bruce Banner",
            YearsOfExp = 5,
            ExtraInfo = "Lorem ipsum dolor sit amet consectetur adipisicing elit. Iure laborum nesciunt unde iusto quas rerumores quaerat eum velit totam!"

        }

    };

   
    bool IsClicked = false;
    private int ReturnedCandidateId = 0;
    private CandidateTest CurrentCandidate = null;
    private async Task On()
    {
        IsClicked = true;
        ReturnedCandidateId = Int32.Parse(await jsr.InvokeAsync<string>("show"));
        CurrentCandidate = Candidates.FirstOrDefault(q => q.Id == ReturnedCandidateId);    
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            await jsr.InvokeVoidAsync("initialize");
        }
    }

    



}